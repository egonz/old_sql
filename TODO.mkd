# Old SQL Todo

## HIGHER PRIORITY

* Schema browser tab?
* Printing and export to excel for ad hoc query results.
* Ensure ad hoc queries are not delete, update, or insert
* Move some of the private methods from the Report Controller into helper methods.
* Add initializer setting to disable Old SQL link at the bottom of the index view.
* Rename design documents to report_layout.
* Require report_db libs to be in a standard location defined in the old_sql initializer.
* If a reports db config exists for the current env, and a report_db connection is not specified in 
  the reports.yml, use the report connection. This will require a subclass of ActiveRecord::Base.
* Fix printing of charts
* Allow multiple sql files. This could be achieved by making @resultset a hash with the name of the 
  query as they key. In the design file, the different result outputs could be referenced using a dot 
  syntax. E.g. user.id, user.first_name, etc.
* Design enhancement: Add support for Excel: http://rubyforge.org/projects/spreadsheet.
* Design enhancement: Add support for the Google Spreadsheet API http://code.google.com/apis/spreadsheets/.

## BACKLOG

* Rename reports.yml to report.yml.
* Parse csv file with Erubis::Eruby
* Try and implement jqgrid sort and search methods. (deferring)
  This should be done in the sql files by passing the params from jqgrid into them. (deferring)
* Fix the demo query so that it performs an aggregate function

## COMPLETED

* Save ad hoc queries locally using html 5
* Clean up, shorten, the block of text at the top of the README
* Add ad hoc query panel.
* Create a section of the design file that can be used as a testing area for within Excel.
  This section would be ignored by the parser. Here is an example: 

	# data:
	parent clicks,other clicks,a+b
	1,4,=A2+B2
	2,5,=A3+B3
	3,2,=A4+B4
	4,1,=A5+B5
	5,5,=A6+B6
* Make all caps labels bold
* Spaces or tabs can be used between cells in the CSV design document to aid in 
  grokking the document.
* Override width and height for the report view in reports.yml
* Allow overriding of the chart colors
* Pass reports structure to OldSql::ReportProcessor::Base
* Multiple db connections
	- Users can create a subclass of ActiveRecord::Base. The name of this class
	  can optionally be included in the report configuration in reports.yml.
	  The path to the class can be turned into a class name using:
	  "old_sql/report_db/alt_test_db".split("/").last.split("_").each {|c| classname << c.capitalize }
* Add chart layout to the copy assets generator
* Switch to the Google Chart API
* Remove the first param to add_row
* Integrate PlotKit
* Report type should be in the yaml. Default can be in initializer.
* The authenticate method in the report controller should be more generic. A variable could be set 
  in an initializer that can be used in an eval method.
* Work on documentation
* Add table.css to the copy_assets generator.
* Eliminate the virality "feature."
* Clean up reports.yml
* I'd like to create a more traditional html report view in addition to jqgrid.
* Add setting in the initializer for jqgrid or html. This will determine which view is used.
* Need to check for divide by zero errors before calling eval
* Move javascript in index.html.erb into a separate javascript file.
* As an alternative to report_processors allow for a csv file that defines the format of the report.
  Use symbols in the cells for the columns. Math operators could be used for performing calculations.
  If this works we could write a complex report with zero ruby/rails code, html, or javascript.  
* Add initializer
* Add a copy assets generator that will copy the few files to the app stylesheets dir. This will 
  allow the user to customize the reports. Do the same for the layout file.
* Rename new_row to add_row.
* Move loading of the sub processor into the base processor.
* Think about creating a rake task. For instance an ASCII view of the reports, or csv.
* Move all templates to lib/generators/old_sql/templates.
* Rename demo files to user_old_sql_demo* to not conflict with actual reports.
* ! Don't create the reports.yml if it already exists !
* Allow jqgrid settings to be overridden in the report config (started)
* Remove CanCan and Sanitize requirement
* Make ROUND_PRECISION and whether to round values configuration options
